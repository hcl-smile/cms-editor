{"id":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","dependencies":[{"name":"/Users/hcltmac/Desktop/amis-editor/package.json","includedInParent":true,"mtime":1607395305037},{"name":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/package.json","includedInParent":true,"mtime":1606632442000},{"name":"./constants","loc":{"line":4,"column":26},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/components/virtual-list/constants.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* Forked from react-virtualized ðŸ’– */\nvar constants_1 = require(\"./constants\");\nvar SizeAndPositionManager = /** @class */ (function () {\n    function SizeAndPositionManager(_a) {\n        var itemCount = _a.itemCount, itemSizeGetter = _a.itemSizeGetter, estimatedItemSize = _a.estimatedItemSize;\n        this.itemSizeGetter = itemSizeGetter;\n        this.itemCount = itemCount;\n        this.estimatedItemSize = estimatedItemSize;\n        // Cache of size and position data for items, mapped by item index.\n        this.itemSizeAndPositionData = {};\n        // Measurements for items up to this index can be trusted; items afterward should be estimated.\n        this.lastMeasuredIndex = -1;\n    }\n    SizeAndPositionManager.prototype.updateConfig = function (_a) {\n        var itemCount = _a.itemCount, itemSizeGetter = _a.itemSizeGetter, estimatedItemSize = _a.estimatedItemSize;\n        if (itemCount != null) {\n            this.itemCount = itemCount;\n        }\n        if (estimatedItemSize != null) {\n            this.estimatedItemSize = estimatedItemSize;\n        }\n        if (itemSizeGetter != null) {\n            this.itemSizeGetter = itemSizeGetter;\n        }\n    };\n    SizeAndPositionManager.prototype.getLastMeasuredIndex = function () {\n        return this.lastMeasuredIndex;\n    };\n    /**\n     * This method returns the size and position for the item at the specified index.\n     * It just-in-time calculates (or used cached values) for items leading up to the index.\n     */\n    SizeAndPositionManager.prototype.getSizeAndPositionForIndex = function (index) {\n        if (index < 0 || index >= this.itemCount) {\n            throw Error(\"Requested index \" + index + \" is outside of range 0..\" + this.itemCount);\n        }\n        if (index > this.lastMeasuredIndex) {\n            var lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n            var offset = lastMeasuredSizeAndPosition.offset + lastMeasuredSizeAndPosition.size;\n            for (var i = this.lastMeasuredIndex + 1; i <= index; i++) {\n                var size = this.itemSizeGetter(i);\n                if (size == null || isNaN(size)) {\n                    throw Error(\"Invalid size returned for index \" + i + \" of value \" + size);\n                }\n                this.itemSizeAndPositionData[i] = {\n                    offset: offset,\n                    size: size,\n                };\n                offset += size;\n            }\n            this.lastMeasuredIndex = index;\n        }\n        return this.itemSizeAndPositionData[index];\n    };\n    SizeAndPositionManager.prototype.getSizeAndPositionOfLastMeasuredItem = function () {\n        return this.lastMeasuredIndex >= 0\n            ? this.itemSizeAndPositionData[this.lastMeasuredIndex]\n            : { offset: 0, size: 0 };\n    };\n    /**\n     * Total size of all items being measured.\n     * This value will be completedly estimated initially.\n     * As items as measured the estimate will be updated.\n     */\n    SizeAndPositionManager.prototype.getTotalSize = function () {\n        var lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n        return (lastMeasuredSizeAndPosition.offset +\n            lastMeasuredSizeAndPosition.size +\n            (this.itemCount - this.lastMeasuredIndex - 1) * this.estimatedItemSize);\n    };\n    /**\n     * Determines a new offset that ensures a certain item is visible, given the alignment.\n     *\n     * @param align Desired alignment within container; one of \"start\" (default), \"center\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @return Offset to use to ensure the specified item is visible\n     */\n    SizeAndPositionManager.prototype.getUpdatedOffsetForIndex = function (_a) {\n        var _b = _a.align, align = _b === void 0 ? constants_1.ALIGNMENT.START : _b, containerSize = _a.containerSize, currentOffset = _a.currentOffset, targetIndex = _a.targetIndex;\n        if (containerSize <= 0) {\n            return 0;\n        }\n        var datum = this.getSizeAndPositionForIndex(targetIndex);\n        var maxOffset = datum.offset;\n        var minOffset = maxOffset - containerSize + datum.size;\n        var idealOffset;\n        switch (align) {\n            case constants_1.ALIGNMENT.END:\n                idealOffset = minOffset;\n                break;\n            case constants_1.ALIGNMENT.CENTER:\n                idealOffset = maxOffset - (containerSize - datum.size) / 2;\n                break;\n            case constants_1.ALIGNMENT.START:\n                idealOffset = maxOffset;\n                break;\n            default:\n                idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n        }\n        var totalSize = this.getTotalSize();\n        return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    };\n    SizeAndPositionManager.prototype.getVisibleRange = function (_a) {\n        var containerSize = _a.containerSize, offset = _a.offset, overscanCount = _a.overscanCount;\n        var totalSize = this.getTotalSize();\n        if (totalSize === 0) {\n            return {};\n        }\n        var maxOffset = offset + containerSize;\n        var start = this.findNearestItem(offset);\n        if (typeof start === 'undefined') {\n            throw Error(\"Invalid offset \" + offset + \" specified\");\n        }\n        var datum = this.getSizeAndPositionForIndex(start);\n        offset = datum.offset + datum.size;\n        var stop = start;\n        while (offset < maxOffset && stop < this.itemCount - 1) {\n            stop++;\n            offset += this.getSizeAndPositionForIndex(stop).size;\n        }\n        if (overscanCount) {\n            start = Math.max(0, start - overscanCount);\n            stop = Math.min(stop + overscanCount, this.itemCount - 1);\n        }\n        return {\n            start: start,\n            stop: stop,\n        };\n    };\n    /**\n     * Clear all cached values for items after the specified index.\n     * This method should be called for any item that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionForIndex() is called.\n     */\n    SizeAndPositionManager.prototype.resetItem = function (index) {\n        this.lastMeasuredIndex = Math.min(this.lastMeasuredIndex, index - 1);\n    };\n    /**\n     * Searches for the item (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest item index will be returned.\n     * This allows partially visible items (with offsets just before/above the fold) to be visible.\n     */\n    SizeAndPositionManager.prototype.findNearestItem = function (offset) {\n        if (isNaN(offset)) {\n            throw Error(\"Invalid offset \" + offset + \" specified\");\n        }\n        // Our search algorithms find the nearest match at or below the specified offset.\n        // So make sure the offset is at least 0 or no match will be found.\n        offset = Math.max(0, offset);\n        var lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n        var lastMeasuredIndex = Math.max(0, this.lastMeasuredIndex);\n        if (lastMeasuredSizeAndPosition.offset >= offset) {\n            // If we've already measured items within this range just use a binary search as it's faster.\n            return this.binarySearch({\n                high: lastMeasuredIndex,\n                low: 0,\n                offset: offset,\n            });\n        }\n        else {\n            // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n            // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n            // The overall complexity for this approach is O(log n).\n            return this.exponentialSearch({\n                index: lastMeasuredIndex,\n                offset: offset,\n            });\n        }\n    };\n    SizeAndPositionManager.prototype.binarySearch = function (_a) {\n        var low = _a.low, high = _a.high, offset = _a.offset;\n        var middle = 0;\n        var currentOffset = 0;\n        while (low <= high) {\n            middle = low + Math.floor((high - low) / 2);\n            currentOffset = this.getSizeAndPositionForIndex(middle).offset;\n            if (currentOffset === offset) {\n                return middle;\n            }\n            else if (currentOffset < offset) {\n                low = middle + 1;\n            }\n            else if (currentOffset > offset) {\n                high = middle - 1;\n            }\n        }\n        if (low > 0) {\n            return low - 1;\n        }\n        return 0;\n    };\n    SizeAndPositionManager.prototype.exponentialSearch = function (_a) {\n        var index = _a.index, offset = _a.offset;\n        var interval = 1;\n        while (index < this.itemCount &&\n            this.getSizeAndPositionForIndex(index).offset < offset) {\n            index += interval;\n            interval *= 2;\n        }\n        return this.binarySearch({\n            high: Math.min(index, this.itemCount - 1),\n            low: Math.floor(index / 2),\n            offset: offset,\n        });\n    };\n    return SizeAndPositionManager;\n}());\nexports.default = SizeAndPositionManager;\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}}],"sources":{"../node_modules/amis/lib/components/virtual-list/SizeAndPositionManager.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* Forked from react-virtualized ðŸ’– */\nvar constants_1 = require(\"./constants\");\nvar SizeAndPositionManager = /** @class */ (function () {\n    function SizeAndPositionManager(_a) {\n        var itemCount = _a.itemCount, itemSizeGetter = _a.itemSizeGetter, estimatedItemSize = _a.estimatedItemSize;\n        this.itemSizeGetter = itemSizeGetter;\n        this.itemCount = itemCount;\n        this.estimatedItemSize = estimatedItemSize;\n        // Cache of size and position data for items, mapped by item index.\n        this.itemSizeAndPositionData = {};\n        // Measurements for items up to this index can be trusted; items afterward should be estimated.\n        this.lastMeasuredIndex = -1;\n    }\n    SizeAndPositionManager.prototype.updateConfig = function (_a) {\n        var itemCount = _a.itemCount, itemSizeGetter = _a.itemSizeGetter, estimatedItemSize = _a.estimatedItemSize;\n        if (itemCount != null) {\n            this.itemCount = itemCount;\n        }\n        if (estimatedItemSize != null) {\n            this.estimatedItemSize = estimatedItemSize;\n        }\n        if (itemSizeGetter != null) {\n            this.itemSizeGetter = itemSizeGetter;\n        }\n    };\n    SizeAndPositionManager.prototype.getLastMeasuredIndex = function () {\n        return this.lastMeasuredIndex;\n    };\n    /**\n     * This method returns the size and position for the item at the specified index.\n     * It just-in-time calculates (or used cached values) for items leading up to the index.\n     */\n    SizeAndPositionManager.prototype.getSizeAndPositionForIndex = function (index) {\n        if (index < 0 || index >= this.itemCount) {\n            throw Error(\"Requested index \" + index + \" is outside of range 0..\" + this.itemCount);\n        }\n        if (index > this.lastMeasuredIndex) {\n            var lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n            var offset = lastMeasuredSizeAndPosition.offset + lastMeasuredSizeAndPosition.size;\n            for (var i = this.lastMeasuredIndex + 1; i <= index; i++) {\n                var size = this.itemSizeGetter(i);\n                if (size == null || isNaN(size)) {\n                    throw Error(\"Invalid size returned for index \" + i + \" of value \" + size);\n                }\n                this.itemSizeAndPositionData[i] = {\n                    offset: offset,\n                    size: size,\n                };\n                offset += size;\n            }\n            this.lastMeasuredIndex = index;\n        }\n        return this.itemSizeAndPositionData[index];\n    };\n    SizeAndPositionManager.prototype.getSizeAndPositionOfLastMeasuredItem = function () {\n        return this.lastMeasuredIndex >= 0\n            ? this.itemSizeAndPositionData[this.lastMeasuredIndex]\n            : { offset: 0, size: 0 };\n    };\n    /**\n     * Total size of all items being measured.\n     * This value will be completedly estimated initially.\n     * As items as measured the estimate will be updated.\n     */\n    SizeAndPositionManager.prototype.getTotalSize = function () {\n        var lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n        return (lastMeasuredSizeAndPosition.offset +\n            lastMeasuredSizeAndPosition.size +\n            (this.itemCount - this.lastMeasuredIndex - 1) * this.estimatedItemSize);\n    };\n    /**\n     * Determines a new offset that ensures a certain item is visible, given the alignment.\n     *\n     * @param align Desired alignment within container; one of \"start\" (default), \"center\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @return Offset to use to ensure the specified item is visible\n     */\n    SizeAndPositionManager.prototype.getUpdatedOffsetForIndex = function (_a) {\n        var _b = _a.align, align = _b === void 0 ? constants_1.ALIGNMENT.START : _b, containerSize = _a.containerSize, currentOffset = _a.currentOffset, targetIndex = _a.targetIndex;\n        if (containerSize <= 0) {\n            return 0;\n        }\n        var datum = this.getSizeAndPositionForIndex(targetIndex);\n        var maxOffset = datum.offset;\n        var minOffset = maxOffset - containerSize + datum.size;\n        var idealOffset;\n        switch (align) {\n            case constants_1.ALIGNMENT.END:\n                idealOffset = minOffset;\n                break;\n            case constants_1.ALIGNMENT.CENTER:\n                idealOffset = maxOffset - (containerSize - datum.size) / 2;\n                break;\n            case constants_1.ALIGNMENT.START:\n                idealOffset = maxOffset;\n                break;\n            default:\n                idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n        }\n        var totalSize = this.getTotalSize();\n        return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    };\n    SizeAndPositionManager.prototype.getVisibleRange = function (_a) {\n        var containerSize = _a.containerSize, offset = _a.offset, overscanCount = _a.overscanCount;\n        var totalSize = this.getTotalSize();\n        if (totalSize === 0) {\n            return {};\n        }\n        var maxOffset = offset + containerSize;\n        var start = this.findNearestItem(offset);\n        if (typeof start === 'undefined') {\n            throw Error(\"Invalid offset \" + offset + \" specified\");\n        }\n        var datum = this.getSizeAndPositionForIndex(start);\n        offset = datum.offset + datum.size;\n        var stop = start;\n        while (offset < maxOffset && stop < this.itemCount - 1) {\n            stop++;\n            offset += this.getSizeAndPositionForIndex(stop).size;\n        }\n        if (overscanCount) {\n            start = Math.max(0, start - overscanCount);\n            stop = Math.min(stop + overscanCount, this.itemCount - 1);\n        }\n        return {\n            start: start,\n            stop: stop,\n        };\n    };\n    /**\n     * Clear all cached values for items after the specified index.\n     * This method should be called for any item that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionForIndex() is called.\n     */\n    SizeAndPositionManager.prototype.resetItem = function (index) {\n        this.lastMeasuredIndex = Math.min(this.lastMeasuredIndex, index - 1);\n    };\n    /**\n     * Searches for the item (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest item index will be returned.\n     * This allows partially visible items (with offsets just before/above the fold) to be visible.\n     */\n    SizeAndPositionManager.prototype.findNearestItem = function (offset) {\n        if (isNaN(offset)) {\n            throw Error(\"Invalid offset \" + offset + \" specified\");\n        }\n        // Our search algorithms find the nearest match at or below the specified offset.\n        // So make sure the offset is at least 0 or no match will be found.\n        offset = Math.max(0, offset);\n        var lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n        var lastMeasuredIndex = Math.max(0, this.lastMeasuredIndex);\n        if (lastMeasuredSizeAndPosition.offset >= offset) {\n            // If we've already measured items within this range just use a binary search as it's faster.\n            return this.binarySearch({\n                high: lastMeasuredIndex,\n                low: 0,\n                offset: offset,\n            });\n        }\n        else {\n            // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n            // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n            // The overall complexity for this approach is O(log n).\n            return this.exponentialSearch({\n                index: lastMeasuredIndex,\n                offset: offset,\n            });\n        }\n    };\n    SizeAndPositionManager.prototype.binarySearch = function (_a) {\n        var low = _a.low, high = _a.high, offset = _a.offset;\n        var middle = 0;\n        var currentOffset = 0;\n        while (low <= high) {\n            middle = low + Math.floor((high - low) / 2);\n            currentOffset = this.getSizeAndPositionForIndex(middle).offset;\n            if (currentOffset === offset) {\n                return middle;\n            }\n            else if (currentOffset < offset) {\n                low = middle + 1;\n            }\n            else if (currentOffset > offset) {\n                high = middle - 1;\n            }\n        }\n        if (low > 0) {\n            return low - 1;\n        }\n        return 0;\n    };\n    SizeAndPositionManager.prototype.exponentialSearch = function (_a) {\n        var index = _a.index, offset = _a.offset;\n        var interval = 1;\n        while (index < this.itemCount &&\n            this.getSizeAndPositionForIndex(index).offset < offset) {\n            index += interval;\n            interval *= 2;\n        }\n        return this.binarySearch({\n            high: Math.min(index, this.itemCount - 1),\n            low: Math.floor(index / 2),\n            offset: offset,\n        });\n    };\n    return SizeAndPositionManager;\n}());\nexports.default = SizeAndPositionManager;\n\n"},"lineCount":213}},"error":null,"hash":"a2d19309143d811b85c2a6a1f741beb2","cacheData":{"env":{}}}