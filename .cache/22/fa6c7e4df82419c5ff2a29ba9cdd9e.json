{"id":"../node_modules/amis/lib/Scoped.js","dependencies":[{"name":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/Scoped.js.map","includedInParent":true,"mtime":1606632442000},{"name":"/Users/hcltmac/Desktop/amis-editor/package.json","includedInParent":true,"mtime":1607395305037},{"name":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/package.json","includedInParent":true,"mtime":1606632442000},{"name":"tslib","loc":{"line":8,"column":22},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/Scoped.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/tslib/tslib.es6.js"},{"name":"react","loc":{"line":9,"column":46},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/Scoped.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/react/index.js"},{"name":"lodash/find","loc":{"line":10,"column":45},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/Scoped.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/lodash/find.js"},{"name":"hoist-non-react-statics","loc":{"line":11,"column":64},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/Scoped.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"},{"name":"qs","loc":{"line":12,"column":43},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/Scoped.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/qs/lib/index.js"},{"name":"./utils/tpl-builtin","loc":{"line":13,"column":28},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/Scoped.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/utils/tpl-builtin.js"},{"name":"./utils/helper","loc":{"line":14,"column":23},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/Scoped.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/utils/helper.js"}],"generated":{"js":"\"use strict\";\n/**\n * @file 用来创建一个域，在这个域里面会把里面的运行时实例注册进来，方便组件之间的通信。\n * @author fex\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HocScoped = exports.ScopedContext = void 0;\nvar tslib_1 = require(\"tslib\");\nvar react_1 = tslib_1.__importDefault(require(\"react\"));\nvar find_1 = tslib_1.__importDefault(require(\"lodash/find\"));\nvar hoist_non_react_statics_1 = tslib_1.__importDefault(require(\"hoist-non-react-statics\"));\nvar qs_1 = tslib_1.__importDefault(require(\"qs\"));\nvar tpl_builtin_1 = require(\"./utils/tpl-builtin\");\nvar helper_1 = require(\"./utils/helper\");\nexports.ScopedContext = react_1.default.createContext(createScopedTools(''));\nfunction createScopedTools(path, parent, env) {\n    var components = [];\n    return {\n        parent: parent,\n        registerComponent: function (component) {\n            // 不要把自己注册在自己的 Scoped 上，自己的 Scoped 是给子节点们注册的。\n            if (component.props.$path === path && parent) {\n                return parent.registerComponent(component);\n            }\n            if (!~components.indexOf(component)) {\n                components.push(component);\n            }\n        },\n        unRegisterComponent: function (component) {\n            // 自己本身实际上注册在父级 Scoped 上。\n            if (component.props.$path === path && parent) {\n                return parent.unRegisterComponent(component);\n            }\n            var idx = components.indexOf(component);\n            if (~idx) {\n                components.splice(idx, 1);\n            }\n        },\n        getComponentByName: function (name) {\n            if (~name.indexOf('.')) {\n                var paths = name.split('.');\n                var len_1 = paths.length;\n                return paths.reduce(function (scope, name, idx) {\n                    if (scope && scope.getComponentByName) {\n                        var result = scope.getComponentByName(name);\n                        return result && idx < len_1 - 1 ? result.context : result;\n                    }\n                    return null;\n                }, this);\n            }\n            var resolved = find_1.default(components, function (component) {\n                return component.props.name === name || component.props.id === name;\n            });\n            return resolved || (parent && parent.getComponentByName(name));\n        },\n        getComponents: function () {\n            return components.concat();\n        },\n        reload: function (target, ctx) {\n            var scoped = this;\n            var targets = typeof target === 'string' ? target.split(/\\s*,\\s*/) : target;\n            targets.forEach(function (name) {\n                var idx2 = name.indexOf('?');\n                var query = null;\n                if (~idx2) {\n                    query = tpl_builtin_1.dataMapping(qs_1.default.parse(name.substring(idx2 + 1)), ctx);\n                    name = name.substring(0, idx2);\n                }\n                var idx = name.indexOf('.');\n                var subPath = '';\n                if (~idx) {\n                    subPath = name.substring(1 + idx);\n                    name = name.substring(0, idx);\n                }\n                if (name === 'window') {\n                    if (query) {\n                        var link = location.pathname + '?' + helper_1.qsstringify(query);\n                        env ? env.updateLocation(link, true) : location.replace(link);\n                    }\n                    else {\n                        location.reload();\n                    }\n                }\n                else {\n                    var component = scoped.getComponentByName(name);\n                    component &&\n                        component.reload &&\n                        component.reload(subPath, query, ctx);\n                }\n            });\n        },\n        send: function (receive, values) {\n            var scoped = this;\n            var receives = typeof receive === 'string' ? receive.split(/\\s*,\\s*/) : receive;\n            // todo 没找到做提示！\n            receives.forEach(function (name) {\n                var idx = name.indexOf('.');\n                var subPath = '';\n                if (~idx) {\n                    subPath = name.substring(1 + idx);\n                    name = name.substring(0, idx);\n                }\n                var component = scoped.getComponentByName(name);\n                if (component && component.receive) {\n                    component.receive(values, subPath);\n                }\n                else if (name === 'window' && env && env.updateLocation) {\n                    var query = tslib_1.__assign(tslib_1.__assign({}, (location.search ? qs_1.default.parse(location.search.substring(1)) : {})), values);\n                    var link = location.pathname + '?' + helper_1.qsstringify(query);\n                    env.updateLocation(link);\n                }\n            });\n        },\n        /**\n         * 主要是用来关闭指定弹框的\n         *\n         * @param target 目标 name\n         */\n        close: function (target) {\n            var scoped = this;\n            if (typeof target === 'string') {\n                // 过滤已经关掉的，当用户 close 配置多个弹框 name 时会出现这种情况\n                target\n                    .split(/\\s*,\\s*/)\n                    .map(function (name) { return scoped.getComponentByName(name); })\n                    .filter(function (component) { return component && component.props.show; })\n                    .forEach(closeDialog);\n            }\n        }\n    };\n}\nfunction closeDialog(component) {\n    component.context\n        .getComponents()\n        .filter(function (item) {\n        return item &&\n            (item.props.type === 'dialog' || item.props.type === 'drawer') &&\n            item.props.show;\n    })\n        .forEach(closeDialog);\n    component.props.onClose && component.props.onClose();\n}\nfunction HocScoped(ComposedComponent) {\n    var ScopedComponent = /** @class */ (function (_super) {\n        tslib_1.__extends(ScopedComponent, _super);\n        function ScopedComponent() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.scoped = createScopedTools(_this.props.$path, _this.context, _this.props.env);\n            return _this;\n        }\n        ScopedComponent.prototype.getWrappedInstance = function () {\n            return this.ref;\n        };\n        ScopedComponent.prototype.childRef = function (ref) {\n            while (ref && ref.getWrappedInstance) {\n                ref = ref.getWrappedInstance();\n            }\n            this.ref = ref;\n        };\n        ScopedComponent.prototype.componentWillMount = function () {\n            var scopeRef = this.props.scopeRef;\n            scopeRef && scopeRef(this.scoped);\n        };\n        ScopedComponent.prototype.componentWillUnmount = function () {\n            var scopeRef = this.props.scopeRef;\n            scopeRef && scopeRef(null);\n        };\n        ScopedComponent.prototype.render = function () {\n            var _a = this.props, scopeRef = _a.scopeRef, rest = tslib_1.__rest(_a, [\"scopeRef\"]);\n            return (react_1.default.createElement(exports.ScopedContext.Provider, { value: this.scoped },\n                react_1.default.createElement(ComposedComponent, tslib_1.__assign({}, rest /* todo */, { ref: this.childRef }))));\n        };\n        ScopedComponent.displayName = \"Scoped(\" + (ComposedComponent.displayName || ComposedComponent.name) + \")\";\n        ScopedComponent.contextType = exports.ScopedContext;\n        ScopedComponent.ComposedComponent = ComposedComponent;\n        tslib_1.__decorate([\n            helper_1.autobind,\n            tslib_1.__metadata(\"design:type\", Function),\n            tslib_1.__metadata(\"design:paramtypes\", [Object]),\n            tslib_1.__metadata(\"design:returntype\", void 0)\n        ], ScopedComponent.prototype, \"childRef\", null);\n        return ScopedComponent;\n    }(react_1.default.Component));\n    hoist_non_react_statics_1.default(ScopedComponent, ComposedComponent);\n    return ScopedComponent;\n}\nexports.HocScoped = HocScoped;\nexports.default = HocScoped;\n\n"},"sourceMaps":{"js":{"version":3,"file":"Scoped.js","sourceRoot":"","sources":["/src/Scoped.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * @file 用来创建一个域，在这个域里面会把里面的运行时实例注册进来，方便组件之间的通信。\n * @author fex\n */\n\nimport React from 'react';\nimport find from 'lodash/find';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport qs from 'qs';\nimport {dataMapping} from './utils/tpl-builtin';\nimport {RendererEnv, RendererProps} from './factory';\nimport {noop, autobind, qsstringify} from './utils/helper';\nimport {RendererData, Action} from './types';\n\nexport interface ScopedComponentType extends React.Component<RendererProps> {\n  focus?: () => void;\n  doAction?: (\n    action: Action,\n    data: RendererData,\n    throwErrors?: boolean\n  ) => void;\n  receive?: (values: RendererData, subPath?: string) => void;\n  reload?: (\n    subPath?: string,\n    query?: RendererData | null,\n    ctx?: RendererData\n  ) => void;\n  context: any;\n}\n\nexport interface IScopedContext {\n  parent?: AliasIScopedContext;\n  registerComponent: (component: ScopedComponentType) => void;\n  unRegisterComponent: (component: ScopedComponentType) => void;\n  getComponentByName: (name: string) => ScopedComponentType;\n  getComponents: () => Array<ScopedComponentType>;\n  reload: (target: string, ctx: RendererData) => void;\n  send: (target: string, ctx: RendererData) => void;\n  close: (target: string) => void;\n}\ntype AliasIScopedContext = IScopedContext;\nexport const ScopedContext = React.createContext(createScopedTools(''));\n\nfunction createScopedTools(\n  path?: string,\n  parent?: AliasIScopedContext,\n  env?: RendererEnv\n): IScopedContext {\n  const components: Array<ScopedComponentType> = [];\n\n  return {\n    parent,\n    registerComponent(component: ScopedComponentType) {\n      // 不要把自己注册在自己的 Scoped 上，自己的 Scoped 是给子节点们注册的。\n      if (component.props.$path === path && parent) {\n        return parent.registerComponent(component);\n      }\n\n      if (!~components.indexOf(component)) {\n        components.push(component);\n      }\n    },\n\n    unRegisterComponent(component: ScopedComponentType) {\n      // 自己本身实际上注册在父级 Scoped 上。\n      if (component.props.$path === path && parent) {\n        return parent.unRegisterComponent(component);\n      }\n\n      const idx = components.indexOf(component);\n\n      if (~idx) {\n        components.splice(idx, 1);\n      }\n    },\n\n    getComponentByName(name: string) {\n      if (~name.indexOf('.')) {\n        const paths = name.split('.');\n        const len = paths.length;\n\n        return paths.reduce((scope, name, idx) => {\n          if (scope && scope.getComponentByName) {\n            const result = scope.getComponentByName(name);\n            return result && idx < len - 1 ? result.context : result;\n          }\n\n          return null;\n        }, this);\n      }\n\n      const resolved = find(\n        components,\n        component =>\n          component.props.name === name || component.props.id === name\n      );\n      return resolved || (parent && parent.getComponentByName(name));\n    },\n\n    getComponents() {\n      return components.concat();\n    },\n\n    reload(target: string, ctx: any) {\n      const scoped = this;\n\n      let targets =\n        typeof target === 'string' ? target.split(/\\s*,\\s*/) : target;\n      targets.forEach(name => {\n        const idx2 = name.indexOf('?');\n        let query = null;\n\n        if (~idx2) {\n          query = dataMapping(qs.parse(name.substring(idx2 + 1)), ctx);\n          name = name.substring(0, idx2);\n        }\n\n        const idx = name.indexOf('.');\n        let subPath = '';\n\n        if (~idx) {\n          subPath = name.substring(1 + idx);\n          name = name.substring(0, idx);\n        }\n\n        if (name === 'window') {\n          if (query) {\n            const link = location.pathname + '?' + qsstringify(query);\n            env ? env.updateLocation(link, true) : location.replace(link);\n          } else {\n            location.reload();\n          }\n        } else {\n          const component = scoped.getComponentByName(name);\n          component &&\n            component.reload &&\n            component.reload(subPath, query, ctx);\n        }\n      });\n    },\n\n    send(receive: string, values: object) {\n      const scoped = this;\n      let receives =\n        typeof receive === 'string' ? receive.split(/\\s*,\\s*/) : receive;\n\n      // todo 没找到做提示！\n      receives.forEach(name => {\n        const idx = name.indexOf('.');\n        let subPath = '';\n\n        if (~idx) {\n          subPath = name.substring(1 + idx);\n          name = name.substring(0, idx);\n        }\n\n        const component = scoped.getComponentByName(name);\n\n        if (component && component.receive) {\n          component.receive(values, subPath);\n        } else if (name === 'window' && env && env.updateLocation) {\n          const query = {\n            ...(location.search ? qs.parse(location.search.substring(1)) : {}),\n            ...values\n          };\n          const link = location.pathname + '?' + qsstringify(query);\n          env.updateLocation(link);\n        }\n      });\n    },\n\n    /**\n     * 主要是用来关闭指定弹框的\n     *\n     * @param target 目标 name\n     */\n    close(target: string | boolean) {\n      const scoped = this;\n\n      if (typeof target === 'string') {\n        // 过滤已经关掉的，当用户 close 配置多个弹框 name 时会出现这种情况\n        target\n          .split(/\\s*,\\s*/)\n          .map(name => scoped.getComponentByName(name))\n          .filter(component => component && component.props.show)\n          .forEach(closeDialog);\n      }\n    }\n  };\n}\n\nfunction closeDialog(component: ScopedComponentType) {\n  (component.context as IScopedContext)\n    .getComponents()\n    .filter(\n      item =>\n        item &&\n        (item.props.type === 'dialog' || item.props.type === 'drawer') &&\n        item.props.show\n    )\n    .forEach(closeDialog);\n  component.props.onClose && component.props.onClose();\n}\n\nexport function HocScoped<\n  T extends {\n    $path?: string;\n    env: RendererEnv;\n  }\n>(\n  ComposedComponent: React.ComponentType<T>\n): React.ComponentType<\n  T & {\n    scopeRef?: (ref: any) => void;\n  }\n> & {\n  ComposedComponent: React.ComponentType<T>;\n} {\n  class ScopedComponent extends React.Component<\n    T & {\n      scopeRef?: (ref: any) => void;\n    }\n  > {\n    static displayName = `Scoped(${\n      ComposedComponent.displayName || ComposedComponent.name\n    })`;\n    static contextType = ScopedContext;\n    static ComposedComponent = ComposedComponent;\n    ref: any;\n\n    getWrappedInstance() {\n      return this.ref;\n    }\n\n    @autobind\n    childRef(ref: any) {\n      while (ref && ref.getWrappedInstance) {\n        ref = ref.getWrappedInstance();\n      }\n\n      this.ref = ref;\n    }\n\n    scoped = createScopedTools(this.props.$path, this.context, this.props.env);\n\n    componentWillMount() {\n      const scopeRef = this.props.scopeRef;\n      scopeRef && scopeRef(this.scoped);\n    }\n\n    componentWillUnmount() {\n      const scopeRef = this.props.scopeRef;\n      scopeRef && scopeRef(null);\n    }\n\n    render() {\n      const {scopeRef, ...rest} = this.props;\n\n      return (\n        <ScopedContext.Provider value={this.scoped}>\n          <ComposedComponent\n            {\n              ...(rest as any) /* todo */\n            }\n            ref={this.childRef}\n          />\n        </ScopedContext.Provider>\n      );\n    }\n  }\n\n  hoistNonReactStatic(ScopedComponent, ComposedComponent);\n  return ScopedComponent;\n}\n\nexport default HocScoped;\n"]}},"error":null,"hash":"d814dcfab275dc05dc4fe5ee3c49bcbc","cacheData":{"env":{}}}