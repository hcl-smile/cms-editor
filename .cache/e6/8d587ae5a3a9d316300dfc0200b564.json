{"id":"../node_modules/lodash/attempt.js","dependencies":[{"name":"/usr/local/work/amis-editor/package.json","includedInParent":true,"mtime":1607074594934},{"name":"/usr/local/work/amis-editor/node_modules/lodash/package.json","includedInParent":true,"mtime":1597627744916},{"name":"./_apply","loc":{"line":1,"column":20},"parent":"/usr/local/work/amis-editor/node_modules/lodash/attempt.js","resolved":"/usr/local/work/amis-editor/node_modules/lodash/_apply.js"},{"name":"./_baseRest","loc":{"line":2,"column":23},"parent":"/usr/local/work/amis-editor/node_modules/lodash/attempt.js","resolved":"/usr/local/work/amis-editor/node_modules/lodash/_baseRest.js"},{"name":"./isError","loc":{"line":3,"column":22},"parent":"/usr/local/work/amis-editor/node_modules/lodash/attempt.js","resolved":"/usr/local/work/amis-editor/node_modules/lodash/isError.js"}],"generated":{"js":"var apply = require('./_apply'),\n    baseRest = require('./_baseRest'),\n    isError = require('./isError');\n\n/**\n * Attempts to invoke `func`, returning either the result or the caught error\n * object. Any additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Function} func The function to attempt.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {*} Returns the `func` result or error object.\n * @example\n *\n * // Avoid throwing errors for invalid selectors.\n * var elements = _.attempt(function(selector) {\n *   return document.querySelectorAll(selector);\n * }, '>_>');\n *\n * if (_.isError(elements)) {\n *   elements = [];\n * }\n */\nvar attempt = baseRest(function(func, args) {\n  try {\n    return apply(func, undefined, args);\n  } catch (e) {\n    return isError(e) ? e : new Error(e);\n  }\n});\n\nmodule.exports = attempt;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/attempt.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/lodash/attempt.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"../node_modules/lodash/attempt.js":"var apply = require('./_apply'),\n    baseRest = require('./_baseRest'),\n    isError = require('./isError');\n\n/**\n * Attempts to invoke `func`, returning either the result or the caught error\n * object. Any additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Function} func The function to attempt.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {*} Returns the `func` result or error object.\n * @example\n *\n * // Avoid throwing errors for invalid selectors.\n * var elements = _.attempt(function(selector) {\n *   return document.querySelectorAll(selector);\n * }, '>_>');\n *\n * if (_.isError(elements)) {\n *   elements = [];\n * }\n */\nvar attempt = baseRest(function(func, args) {\n  try {\n    return apply(func, undefined, args);\n  } catch (e) {\n    return isError(e) ? e : new Error(e);\n  }\n});\n\nmodule.exports = attempt;\n"},"lineCount":36}},"error":null,"hash":"79085d36f7d60214be705c4ce0d2b317","cacheData":{"env":{}}}