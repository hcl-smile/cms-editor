{"id":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","dependencies":[{"name":"/Users/hcltmac/Desktop/amis-editor/package.json","includedInParent":true,"mtime":1607395305037},{"name":"/Users/hcltmac/Desktop/amis-editor/node_modules/react-visibility-sensor/package.json","includedInParent":true,"mtime":1606632423000}],"generated":{"js":"// Tell whether the rect is visible, given an offset\n//\n// return: boolean\nmodule.exports = function (offset, rect, containmentRect) {\n  var offsetDir = offset.direction;\n  var offsetVal = offset.value;\n\n  // Rules for checking different kind of offsets. In example if the element is\n  // 90px below viewport and offsetTop is 100, it is considered visible.\n  switch (offsetDir) {\n  case 'top':\n    return ((containmentRect.top + offsetVal) < rect.top) &&\n      (containmentRect.bottom > rect.bottom) &&\n      (containmentRect.left < rect.left) &&\n      (containmentRect.right > rect.right);\n\n  case 'left':\n    return ((containmentRect.left + offsetVal) < rect.left) &&\n      (containmentRect.bottom > rect.bottom) &&\n      (containmentRect.top < rect.top) &&\n      (containmentRect.right > rect.right);\n\n  case 'bottom':\n    return ((containmentRect.bottom - offsetVal) > rect.bottom) &&\n      (containmentRect.left < rect.left) &&\n      (containmentRect.right > rect.right) &&\n      (containmentRect.top < rect.top);\n\n  case 'right':\n    return ((containmentRect.right - offsetVal) > rect.right) &&\n      (containmentRect.left < rect.left) &&\n      (containmentRect.top < rect.top) &&\n      (containmentRect.bottom > rect.bottom);\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js":"// Tell whether the rect is visible, given an offset\n//\n// return: boolean\nmodule.exports = function (offset, rect, containmentRect) {\n  var offsetDir = offset.direction;\n  var offsetVal = offset.value;\n\n  // Rules for checking different kind of offsets. In example if the element is\n  // 90px below viewport and offsetTop is 100, it is considered visible.\n  switch (offsetDir) {\n  case 'top':\n    return ((containmentRect.top + offsetVal) < rect.top) &&\n      (containmentRect.bottom > rect.bottom) &&\n      (containmentRect.left < rect.left) &&\n      (containmentRect.right > rect.right);\n\n  case 'left':\n    return ((containmentRect.left + offsetVal) < rect.left) &&\n      (containmentRect.bottom > rect.bottom) &&\n      (containmentRect.top < rect.top) &&\n      (containmentRect.right > rect.right);\n\n  case 'bottom':\n    return ((containmentRect.bottom - offsetVal) > rect.bottom) &&\n      (containmentRect.left < rect.left) &&\n      (containmentRect.right > rect.right) &&\n      (containmentRect.top < rect.top);\n\n  case 'right':\n    return ((containmentRect.right - offsetVal) > rect.right) &&\n      (containmentRect.left < rect.left) &&\n      (containmentRect.top < rect.top) &&\n      (containmentRect.bottom > rect.bottom);\n  }\n}\n"},"lineCount":36}},"error":null,"hash":"c549597b69dfede526086c24e871f56f","cacheData":{"env":{}}}