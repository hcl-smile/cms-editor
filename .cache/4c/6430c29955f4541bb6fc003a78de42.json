{"id":"../node_modules/amis/lib/components/condition-builder/Func.js","dependencies":[{"name":"/usr/local/work/amis-editor/package.json","includedInParent":true,"mtime":1607074594934},{"name":"/usr/local/work/amis-editor/node_modules/amis/package.json","includedInParent":true,"mtime":1606632442645},{"name":"tslib","loc":{"line":4,"column":22},"parent":"/usr/local/work/amis-editor/node_modules/amis/lib/components/condition-builder/Func.js","resolved":"/usr/local/work/amis-editor/node_modules/tslib/tslib.es6.js"},{"name":"react","loc":{"line":5,"column":46},"parent":"/usr/local/work/amis-editor/node_modules/amis/lib/components/condition-builder/Func.js","resolved":"/usr/local/work/amis-editor/node_modules/react/index.js"},{"name":"../../theme","loc":{"line":6,"column":22},"parent":"/usr/local/work/amis-editor/node_modules/amis/lib/components/condition-builder/Func.js","resolved":"/usr/local/work/amis-editor/node_modules/amis/lib/theme.js"},{"name":"../PopOverContainer","loc":{"line":7,"column":57},"parent":"/usr/local/work/amis-editor/node_modules/amis/lib/components/condition-builder/Func.js","resolved":"/usr/local/work/amis-editor/node_modules/amis/lib/components/PopOverContainer.js"},{"name":"../ListRadios","loc":{"line":8,"column":51},"parent":"/usr/local/work/amis-editor/node_modules/amis/lib/components/condition-builder/Func.js","resolved":"/usr/local/work/amis-editor/node_modules/amis/lib/components/ListRadios.js"},{"name":"../../utils/helper","loc":{"line":9,"column":23},"parent":"/usr/local/work/amis-editor/node_modules/amis/lib/components/condition-builder/Func.js","resolved":"/usr/local/work/amis-editor/node_modules/amis/lib/utils/helper.js"},{"name":"../ResultBox","loc":{"line":10,"column":50},"parent":"/usr/local/work/amis-editor/node_modules/amis/lib/components/condition-builder/Func.js","resolved":"/usr/local/work/amis-editor/node_modules/amis/lib/components/ResultBox.js"},{"name":"../icons","loc":{"line":11,"column":22},"parent":"/usr/local/work/amis-editor/node_modules/amis/lib/components/condition-builder/Func.js","resolved":"/usr/local/work/amis-editor/node_modules/amis/lib/components/icons.js"},{"name":"./Expression","loc":{"line":12,"column":51},"parent":"/usr/local/work/amis-editor/node_modules/amis/lib/components/condition-builder/Func.js","resolved":"/usr/local/work/amis-editor/node_modules/amis/lib/components/condition-builder/Expression.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConditionFunc = void 0;\nvar tslib_1 = require(\"tslib\");\nvar react_1 = tslib_1.__importDefault(require(\"react\"));\nvar theme_1 = require(\"../../theme\");\nvar PopOverContainer_1 = tslib_1.__importDefault(require(\"../PopOverContainer\"));\nvar ListRadios_1 = tslib_1.__importDefault(require(\"../ListRadios\"));\nvar helper_1 = require(\"../../utils/helper\");\nvar ResultBox_1 = tslib_1.__importDefault(require(\"../ResultBox\"));\nvar icons_1 = require(\"../icons\");\nvar Expression_1 = tslib_1.__importDefault(require(\"./Expression\"));\nvar option2value = function (item) { return item.type; };\nvar ConditionFunc = /** @class */ (function (_super) {\n    tslib_1.__extends(ConditionFunc, _super);\n    function ConditionFunc() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ConditionFunc.prototype.handleFuncChange = function (type) {\n        var value = tslib_1.__assign({}, this.props.value);\n        value.func = type;\n        this.props.onChange(value);\n    };\n    ConditionFunc.prototype.handleArgChange = function (arg, index) {\n        var value = tslib_1.__assign({}, this.props.value);\n        value.args = Array.isArray(value.args) ? value.args.concat() : [];\n        value.args.splice(index, 1, arg);\n        this.props.onChange(value);\n    };\n    ConditionFunc.prototype.renderFunc = function (func) {\n        var _this = this;\n        var _a = this.props, cx = _a.classnames, fields = _a.fields, value = _a.value, funcs = _a.funcs, config = _a.config;\n        return (react_1.default.createElement(\"div\", { className: cx('CBFunc-args') },\n            react_1.default.createElement(\"span\", null, \"(\"),\n            Array.isArray(func.args) && func.args.length ? (react_1.default.createElement(\"div\", null, func.args.map(function (item, index) { return (react_1.default.createElement(Expression_1.default, { config: config, key: index, index: index, fields: fields, value: value === null || value === void 0 ? void 0 : value.args[index], valueField: { type: item.type }, onChange: _this.handleArgChange, funcs: funcs })); }))) : null,\n            react_1.default.createElement(\"span\", null, \")\")));\n    };\n    ConditionFunc.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, value = _a.value, cx = _a.classnames, funcs = _a.funcs;\n        var func = value\n            ? helper_1.findTree(funcs, function (item) { return item.type === value.func; })\n            : null;\n        return (react_1.default.createElement(\"div\", { className: cx('CBFunc') },\n            react_1.default.createElement(PopOverContainer_1.default, { popOverRender: function (_a) {\n                    var _b;\n                    var onClose = _a.onClose;\n                    return (react_1.default.createElement(ListRadios_1.default, { onClick: onClose, showRadio: false, options: funcs, value: (_b = func) === null || _b === void 0 ? void 0 : _b.type, option2value: option2value, onChange: _this.handleFuncChange }));\n                } }, function (_a) {\n                var onClick = _a.onClick, ref = _a.ref, isOpened = _a.isOpened;\n                return (react_1.default.createElement(\"div\", { className: cx('CBFunc-select') },\n                    react_1.default.createElement(ResultBox_1.default, { className: cx('CBGroup-fieldInput', isOpened ? 'is-active' : ''), ref: ref, allowInput: false, result: func === null || func === void 0 ? void 0 : func.label, onResultChange: helper_1.noop, onResultClick: onClick, placeholder: \"\\u8BF7\\u9009\\u62E9\\u5B57\\u6BB5\" },\n                        react_1.default.createElement(\"span\", { className: cx('CBGroup-fieldCaret') },\n                            react_1.default.createElement(icons_1.Icon, { icon: \"caret\", className: \"icon\" })))));\n            }),\n            func ? (this.renderFunc(func)) : (react_1.default.createElement(\"span\", { className: cx('CBFunc-error') }, \"\\u65B9\\u6CD5\\u672A\\u5B9A\\u4E49\"))));\n    };\n    tslib_1.__decorate([\n        helper_1.autobind,\n        tslib_1.__metadata(\"design:type\", Function),\n        tslib_1.__metadata(\"design:paramtypes\", [String]),\n        tslib_1.__metadata(\"design:returntype\", void 0)\n    ], ConditionFunc.prototype, \"handleFuncChange\", null);\n    tslib_1.__decorate([\n        helper_1.autobind,\n        tslib_1.__metadata(\"design:type\", Function),\n        tslib_1.__metadata(\"design:paramtypes\", [Object, Number]),\n        tslib_1.__metadata(\"design:returntype\", void 0)\n    ], ConditionFunc.prototype, \"handleArgChange\", null);\n    return ConditionFunc;\n}(react_1.default.Component));\nexports.ConditionFunc = ConditionFunc;\nexports.default = theme_1.themeable(ConditionFunc);\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/amis/lib/components/condition-builder/Func.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"../node_modules/amis/lib/components/condition-builder/Func.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConditionFunc = void 0;\nvar tslib_1 = require(\"tslib\");\nvar react_1 = tslib_1.__importDefault(require(\"react\"));\nvar theme_1 = require(\"../../theme\");\nvar PopOverContainer_1 = tslib_1.__importDefault(require(\"../PopOverContainer\"));\nvar ListRadios_1 = tslib_1.__importDefault(require(\"../ListRadios\"));\nvar helper_1 = require(\"../../utils/helper\");\nvar ResultBox_1 = tslib_1.__importDefault(require(\"../ResultBox\"));\nvar icons_1 = require(\"../icons\");\nvar Expression_1 = tslib_1.__importDefault(require(\"./Expression\"));\nvar option2value = function (item) { return item.type; };\nvar ConditionFunc = /** @class */ (function (_super) {\n    tslib_1.__extends(ConditionFunc, _super);\n    function ConditionFunc() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ConditionFunc.prototype.handleFuncChange = function (type) {\n        var value = tslib_1.__assign({}, this.props.value);\n        value.func = type;\n        this.props.onChange(value);\n    };\n    ConditionFunc.prototype.handleArgChange = function (arg, index) {\n        var value = tslib_1.__assign({}, this.props.value);\n        value.args = Array.isArray(value.args) ? value.args.concat() : [];\n        value.args.splice(index, 1, arg);\n        this.props.onChange(value);\n    };\n    ConditionFunc.prototype.renderFunc = function (func) {\n        var _this = this;\n        var _a = this.props, cx = _a.classnames, fields = _a.fields, value = _a.value, funcs = _a.funcs, config = _a.config;\n        return (react_1.default.createElement(\"div\", { className: cx('CBFunc-args') },\n            react_1.default.createElement(\"span\", null, \"(\"),\n            Array.isArray(func.args) && func.args.length ? (react_1.default.createElement(\"div\", null, func.args.map(function (item, index) { return (react_1.default.createElement(Expression_1.default, { config: config, key: index, index: index, fields: fields, value: value === null || value === void 0 ? void 0 : value.args[index], valueField: { type: item.type }, onChange: _this.handleArgChange, funcs: funcs })); }))) : null,\n            react_1.default.createElement(\"span\", null, \")\")));\n    };\n    ConditionFunc.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, value = _a.value, cx = _a.classnames, funcs = _a.funcs;\n        var func = value\n            ? helper_1.findTree(funcs, function (item) { return item.type === value.func; })\n            : null;\n        return (react_1.default.createElement(\"div\", { className: cx('CBFunc') },\n            react_1.default.createElement(PopOverContainer_1.default, { popOverRender: function (_a) {\n                    var _b;\n                    var onClose = _a.onClose;\n                    return (react_1.default.createElement(ListRadios_1.default, { onClick: onClose, showRadio: false, options: funcs, value: (_b = func) === null || _b === void 0 ? void 0 : _b.type, option2value: option2value, onChange: _this.handleFuncChange }));\n                } }, function (_a) {\n                var onClick = _a.onClick, ref = _a.ref, isOpened = _a.isOpened;\n                return (react_1.default.createElement(\"div\", { className: cx('CBFunc-select') },\n                    react_1.default.createElement(ResultBox_1.default, { className: cx('CBGroup-fieldInput', isOpened ? 'is-active' : ''), ref: ref, allowInput: false, result: func === null || func === void 0 ? void 0 : func.label, onResultChange: helper_1.noop, onResultClick: onClick, placeholder: \"\\u8BF7\\u9009\\u62E9\\u5B57\\u6BB5\" },\n                        react_1.default.createElement(\"span\", { className: cx('CBGroup-fieldCaret') },\n                            react_1.default.createElement(icons_1.Icon, { icon: \"caret\", className: \"icon\" })))));\n            }),\n            func ? (this.renderFunc(func)) : (react_1.default.createElement(\"span\", { className: cx('CBFunc-error') }, \"\\u65B9\\u6CD5\\u672A\\u5B9A\\u4E49\"))));\n    };\n    tslib_1.__decorate([\n        helper_1.autobind,\n        tslib_1.__metadata(\"design:type\", Function),\n        tslib_1.__metadata(\"design:paramtypes\", [String]),\n        tslib_1.__metadata(\"design:returntype\", void 0)\n    ], ConditionFunc.prototype, \"handleFuncChange\", null);\n    tslib_1.__decorate([\n        helper_1.autobind,\n        tslib_1.__metadata(\"design:type\", Function),\n        tslib_1.__metadata(\"design:paramtypes\", [Object, Number]),\n        tslib_1.__metadata(\"design:returntype\", void 0)\n    ], ConditionFunc.prototype, \"handleArgChange\", null);\n    return ConditionFunc;\n}(react_1.default.Component));\nexports.ConditionFunc = ConditionFunc;\nexports.default = theme_1.themeable(ConditionFunc);\n\n"},"lineCount":75}},"error":null,"hash":"800032ed733e31ad0b4dab284d89a415","cacheData":{"env":{}}}