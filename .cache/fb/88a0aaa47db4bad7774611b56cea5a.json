{"id":"../node_modules/react-json-tree/lib/JSONIterableNode.js","dependencies":[{"name":"/usr/local/work/amis-editor/package.json","includedInParent":true,"mtime":1607074594934},{"name":"/usr/local/work/amis-editor/node_modules/react-json-tree/package.json","includedInParent":true,"mtime":1606632417569},{"name":"react","loc":{"line":8,"column":44},"parent":"/usr/local/work/amis-editor/node_modules/react-json-tree/lib/JSONIterableNode.js","resolved":"/usr/local/work/amis-editor/node_modules/react/index.js"},{"name":"./JSONNestedNode","loc":{"line":10,"column":53},"parent":"/usr/local/work/amis-editor/node_modules/react-json-tree/lib/JSONIterableNode.js","resolved":"/usr/local/work/amis-editor/node_modules/react-json-tree/lib/JSONNestedNode.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _JSONNestedNode = _interopRequireDefault(require(\"./JSONNestedNode\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// Returns the \"n Items\" string for this node,\n// generating and caching it if it hasn't been created yet.\nfunction createItemString(data, limit) {\n  var count = 0;\n  var hasMore = false;\n\n  if (Number.isSafeInteger(data.size)) {\n    count = data.size;\n  } else {\n    // eslint-disable-next-line no-unused-vars\n    var _iterator = _createForOfIteratorHelper(data),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var entry = _step.value;\n\n        if (limit && count + 1 > limit) {\n          hasMore = true;\n          break;\n        }\n\n        count += 1;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return \"\".concat(hasMore ? '>' : '').concat(count, \" \").concat(count !== 1 ? 'entries' : 'entry');\n}\n\n// Configures <JSONNestedNode> to render an iterable\nvar JSONIterableNode = function JSONIterableNode(_ref) {\n  var props = _extends({}, _ref);\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_JSONNestedNode[\"default\"], _extends({}, props, {\n    nodeType: \"Iterable\",\n    nodeTypeIndicator: \"()\",\n    createItemString: createItemString\n  }));\n};\n\nvar _default = JSONIterableNode;\nexports[\"default\"] = _default;\n"},"sourceMaps":{"js":{"version":3,"sources":["../src/JSONIterableNode.tsx"],"names":["createItemString","data","limit","count","hasMore","Number","isSafeInteger","size","entry","JSONIterableNode","props"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;AAGA;AACA;AACA,SAASA,gBAAT,CAA0BC,IAA1B,EAAqCC,KAArC,EAAoD;AAClD,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,OAAO,GAAG,KAAd;;AACA,MAAIC,MAAM,CAACC,aAAP,CAAqBL,IAAI,CAACM,IAA1B,CAAJ,EAAqC;AACnCJ,IAAAA,KAAK,GAAGF,IAAI,CAACM,IAAb;AACD,GAFD,MAEO;AACL;AADK,+CAEeN,IAFf;AAAA;;AAAA;AAEL,0DAA0B;AAAA,YAAfO,KAAe;;AACxB,YAAIN,KAAK,IAAIC,KAAK,GAAG,CAAR,GAAYD,KAAzB,EAAgC;AAC9BE,UAAAA,OAAO,GAAG,IAAV;AACA;AACD;;AACDD,QAAAA,KAAK,IAAI,CAAT;AACD;AARI;AAAA;AAAA;AAAA;AAAA;AASN;;AACD,mBAAUC,OAAO,GAAG,GAAH,GAAS,EAA1B,SAA+BD,KAA/B,cAAwCA,KAAK,KAAK,CAAV,GAAc,SAAd,GAA0B,OAAlE;AACD;;AAOD;AACA,IAAMM,gBAAgD,GAAG,SAAnDA,gBAAmD,OAAkB;AAAA,MAAZC,KAAY;;AACzE,sBACE,gCAAC,0BAAD,eACMA,KADN;AAEE,IAAA,QAAQ,EAAC,UAFX;AAGE,IAAA,iBAAiB,EAAC,IAHpB;AAIE,IAAA,gBAAgB,EAAEV;AAJpB,KADF;AAQD,CATD;;eAWeS,gB","sourcesContent":["import React from 'react';\nimport JSONNestedNode from './JSONNestedNode';\nimport { CircularPropsPassedThroughJSONNode } from './types';\n\n// Returns the \"n Items\" string for this node,\n// generating and caching it if it hasn't been created yet.\nfunction createItemString(data: any, limit: number) {\n  let count = 0;\n  let hasMore = false;\n  if (Number.isSafeInteger(data.size)) {\n    count = data.size;\n  } else {\n    // eslint-disable-next-line no-unused-vars\n    for (const entry of data) {\n      if (limit && count + 1 > limit) {\n        hasMore = true;\n        break;\n      }\n      count += 1;\n    }\n  }\n  return `${hasMore ? '>' : ''}${count} ${count !== 1 ? 'entries' : 'entry'}`;\n}\n\ninterface Props extends CircularPropsPassedThroughJSONNode {\n  data: any;\n  nodeType: string;\n}\n\n// Configures <JSONNestedNode> to render an iterable\nconst JSONIterableNode: React.FunctionComponent<Props> = ({ ...props }) => {\n  return (\n    <JSONNestedNode\n      {...props}\n      nodeType=\"Iterable\"\n      nodeTypeIndicator=\"()\"\n      createItemString={createItemString}\n    />\n  );\n};\n\nexport default JSONIterableNode;\n"]}},"error":null,"hash":"664c4eea862c2f83d366f29a5932af32","cacheData":{"env":{}}}