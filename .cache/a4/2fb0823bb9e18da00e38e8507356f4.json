{"id":"../node_modules/amis/lib/renderers/Tasks.js","dependencies":[{"name":"/Users/hcltmac/Desktop/amis-editor/package.json","includedInParent":true,"mtime":1607395305037},{"name":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/package.json","includedInParent":true,"mtime":1606632442000},{"name":"tslib","loc":{"line":4,"column":22},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/renderers/Tasks.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/tslib/tslib.es6.js"},{"name":"react","loc":{"line":5,"column":46},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/renderers/Tasks.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/react/index.js"},{"name":"../factory","loc":{"line":6,"column":24},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/renderers/Tasks.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/factory.js"},{"name":"classnames","loc":{"line":7,"column":51},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/renderers/Tasks.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/node_modules/classnames/index.js"},{"name":"immutability-helper","loc":{"line":8,"column":60},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/renderers/Tasks.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/immutability-helper/index.js"},{"name":"../utils/api","loc":{"line":9,"column":20},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/renderers/Tasks.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/utils/api.js"},{"name":"../Scoped","loc":{"line":10,"column":23},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/renderers/Tasks.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/Scoped.js"},{"name":"../components/Spinner","loc":{"line":11,"column":48},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/renderers/Tasks.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/components/Spinner.js"},{"name":"../utils/helper","loc":{"line":12,"column":23},"parent":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/renderers/Tasks.js","resolved":"/Users/hcltmac/Desktop/amis-editor/node_modules/amis/lib/utils/helper.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TaskRenderer = void 0;\nvar tslib_1 = require(\"tslib\");\nvar react_1 = tslib_1.__importDefault(require(\"react\"));\nvar factory_1 = require(\"../factory\");\nvar classnames_1 = tslib_1.__importDefault(require(\"classnames\"));\nvar immutability_helper_1 = tslib_1.__importDefault(require(\"immutability-helper\"));\nvar api_1 = require(\"../utils/api\");\nvar Scoped_1 = require(\"../Scoped\");\nvar Spinner_1 = tslib_1.__importDefault(require(\"../components/Spinner\"));\nvar helper_1 = require(\"../utils/helper\");\nvar Task = /** @class */ (function (_super) {\n    tslib_1.__extends(Task, _super);\n    function Task(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            items: props.items ? props.items.concat() : []\n        };\n        _this.handleLoaded = _this.handleLoaded.bind(_this);\n        _this.tick = _this.tick.bind(_this);\n        return _this;\n    }\n    Task.prototype.componentDidMount = function () {\n        this.tick(!!this.props.checkApi);\n    };\n    Task.prototype.componentWillReceiveProps = function (nextProps) {\n        var props = this.props;\n        if (props.items !== nextProps.items) {\n            this.setState({\n                items: nextProps.items ? nextProps.items.concat() : []\n            });\n        }\n    };\n    Task.prototype.componentDidUpdate = function (prevProps) {\n        var props = this.props;\n        if (api_1.isApiOutdated(prevProps.checkApi, props.checkApi, prevProps.data, props.data)) {\n            this.tick(true);\n        }\n    };\n    Task.prototype.componentWillUnmount = function () {\n        clearTimeout(this.timer);\n    };\n    Task.prototype.reload = function () {\n        this.tick(true);\n    };\n    Task.prototype.tick = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var _a = this.props, loadingStatusCode = _a.loadingStatusCode, data = _a.data, interval = _a.interval, checkApi = _a.checkApi, env = _a.env;\n        var items = this.state.items;\n        clearTimeout(this.timer);\n        // 如果每个 task 都完成了, 则不需要取查看状态.\n        if (!force && !items.some(function (item) { return item.status === loadingStatusCode; })) {\n            return;\n        }\n        if (interval && !api_1.isEffectiveApi(checkApi)) {\n            return env.alert('checkApi 没有设置, 不能及时获取任务状态');\n        }\n        api_1.isEffectiveApi(checkApi, data) &&\n            env &&\n            env\n                .fetcher(checkApi, data)\n                .then(this.handleLoaded)\n                .catch(function (e) { return _this.setState({ error: e }); });\n    };\n    Task.prototype.handleLoaded = function (ret) {\n        if (!Array.isArray(ret.data)) {\n            return this.props.env.alert('返回格式不正确, 期望 response.data 为数组, 包含每个 task 的状态信息');\n        }\n        this.setState({\n            items: ret.data\n        });\n        var interval = this.props.interval;\n        clearTimeout(this.timer);\n        this.timer = setTimeout(this.tick, interval);\n    };\n    Task.prototype.submitTask = function (item, index, retry) {\n        var _this = this;\n        if (retry === void 0) { retry = false; }\n        var _a = this.props, submitApi = _a.submitApi, reSubmitApi = _a.reSubmitApi, loadingStatusCode = _a.loadingStatusCode, errorStatusCode = _a.errorStatusCode, data = _a.data, env = _a.env;\n        if (!retry && !api_1.isEffectiveApi(submitApi)) {\n            return env.alert('submitApi 没有配置');\n        }\n        else if (retry && !api_1.isEffectiveApi(reSubmitApi)) {\n            return env.alert('reSubmitApi 没有配置');\n        }\n        this.setState(immutability_helper_1.default(this.state, {\n            items: {\n                $splice: [\n                    [\n                        index,\n                        1,\n                        tslib_1.__assign(tslib_1.__assign({}, item), { status: loadingStatusCode })\n                    ]\n                ]\n            }\n        }));\n        var api = retry ? reSubmitApi : submitApi;\n        api_1.isEffectiveApi(api, data) &&\n            env &&\n            env\n                .fetcher(api, helper_1.createObject(data, item))\n                .then(function (ret) {\n                if (ret && ret.data) {\n                    if (Array.isArray(ret.data)) {\n                        _this.handleLoaded(ret);\n                    }\n                    else {\n                        var replace = api && api.replaceData;\n                        var items = _this.state.items.map(function (item) {\n                            return item.key === ret.data.key\n                                ? tslib_1.__assign(tslib_1.__assign({}, (api.replaceData ? {} : item)), ret.data) : item;\n                        });\n                        _this.handleLoaded(tslib_1.__assign(tslib_1.__assign({}, ret), { data: items }));\n                    }\n                    return;\n                }\n                clearTimeout(_this.timer);\n                _this.timer = setTimeout(_this.tick, 4);\n            })\n                .catch(function (e) {\n                return _this.setState(immutability_helper_1.default(_this.state, {\n                    items: {\n                        $splice: [\n                            [\n                                index,\n                                1,\n                                tslib_1.__assign(tslib_1.__assign({}, item), { status: errorStatusCode, remark: e.message || e })\n                            ]\n                        ]\n                    }\n                }));\n            });\n    };\n    Task.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, className = _a.className, tableClassName = _a.tableClassName, taskNameLabel = _a.taskNameLabel, operationLabel = _a.operationLabel, statusLabel = _a.statusLabel, remarkLabel = _a.remarkLabel, btnText = _a.btnText, retryBtnText = _a.retryBtnText, btnClassName = _a.btnClassName, retryBtnClassName = _a.retryBtnClassName, statusLabelMap = _a.statusLabelMap, statusTextMap = _a.statusTextMap, readyStatusCode = _a.readyStatusCode, loadingStatusCode = _a.loadingStatusCode, canRetryStatusCode = _a.canRetryStatusCode, render = _a.render;\n        var items = this.state.items;\n        var error = this.state.error;\n        return (react_1.default.createElement(\"div\", { className: className },\n            react_1.default.createElement(\"table\", { className: tableClassName },\n                react_1.default.createElement(\"thead\", null,\n                    react_1.default.createElement(\"tr\", null,\n                        react_1.default.createElement(\"th\", null, taskNameLabel),\n                        react_1.default.createElement(\"th\", null, operationLabel),\n                        react_1.default.createElement(\"th\", null, statusLabel),\n                        react_1.default.createElement(\"th\", null, remarkLabel))),\n                react_1.default.createElement(\"tbody\", null, error ? (react_1.default.createElement(\"tr\", null,\n                    react_1.default.createElement(\"td\", { colSpan: 4 },\n                        react_1.default.createElement(\"div\", { className: \"text-danger\" }, error)))) : (items.map(function (item, key) { return (react_1.default.createElement(\"tr\", { key: key },\n                    react_1.default.createElement(\"td\", null, item.label),\n                    react_1.default.createElement(\"td\", null, item.status == loadingStatusCode ? (react_1.default.createElement(Spinner_1.default, { show: true, icon: \"reload\", spinnerClassName: classnames_1.default('Task-spinner') })) : item.status == canRetryStatusCode ? (react_1.default.createElement(\"a\", { onClick: function () { return _this.submitTask(item, key, true); }, className: classnames_1.default('btn', retryBtnClassName || btnClassName) }, retryBtnText || btnText)) : (react_1.default.createElement(\"a\", { onClick: function () { return _this.submitTask(item, key); }, className: classnames_1.default('btn', btnClassName, {\n                            disabled: item.status !== readyStatusCode\n                        }) }, btnText))),\n                    react_1.default.createElement(\"td\", null,\n                        react_1.default.createElement(\"span\", { className: classnames_1.default('label', statusLabelMap && statusLabelMap[item.status || 0]) }, statusTextMap && statusTextMap[item.status || 0])),\n                    react_1.default.createElement(\"td\", null, item.remark ? render(key + \"/remark\", item.remark) : null))); }))))));\n    };\n    Task.defaultProps = {\n        className: 'b-a bg-white table-responsive',\n        tableClassName: 'table table-striped m-b-none',\n        taskNameLabel: '任务名称',\n        operationLabel: '操作',\n        statusLabel: '状态',\n        remarkLabel: '备注说明',\n        btnText: '上线',\n        retryBtnText: '重试',\n        btnClassName: 'btn-sm btn-default',\n        retryBtnClassName: 'btn-sm btn-danger',\n        statusLabelMap: [\n            'label-warning',\n            'label-info',\n            'label-info',\n            'label-danger',\n            'label-success',\n            'label-danger'\n        ],\n        statusTextMap: ['未开始', '就绪', '进行中', '出错', '已完成', '出错'],\n        initialStatusCode: 0,\n        readyStatusCode: 1,\n        loadingStatusCode: 2,\n        errorStatusCode: 3,\n        finishStatusCode: 4,\n        canRetryStatusCode: 5,\n        interval: 3000\n    };\n    return Task;\n}(react_1.default.Component));\nexports.default = Task;\nvar TaskRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(TaskRenderer, _super);\n    function TaskRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TaskRenderer.prototype.componentWillMount = function () {\n        // super.componentWillMount();\n        var scoped = this.context;\n        scoped.registerComponent(this);\n    };\n    TaskRenderer.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        var scoped = this.context;\n        scoped.unRegisterComponent(this);\n    };\n    TaskRenderer.contextType = Scoped_1.ScopedContext;\n    TaskRenderer = tslib_1.__decorate([\n        factory_1.Renderer({\n            test: /(^|\\/)tasks$/,\n            name: 'tasks'\n        })\n    ], TaskRenderer);\n    return TaskRenderer;\n}(Task));\nexports.TaskRenderer = TaskRenderer;\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/amis/lib/renderers/Tasks.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}}],"sources":{"../node_modules/amis/lib/renderers/Tasks.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TaskRenderer = void 0;\nvar tslib_1 = require(\"tslib\");\nvar react_1 = tslib_1.__importDefault(require(\"react\"));\nvar factory_1 = require(\"../factory\");\nvar classnames_1 = tslib_1.__importDefault(require(\"classnames\"));\nvar immutability_helper_1 = tslib_1.__importDefault(require(\"immutability-helper\"));\nvar api_1 = require(\"../utils/api\");\nvar Scoped_1 = require(\"../Scoped\");\nvar Spinner_1 = tslib_1.__importDefault(require(\"../components/Spinner\"));\nvar helper_1 = require(\"../utils/helper\");\nvar Task = /** @class */ (function (_super) {\n    tslib_1.__extends(Task, _super);\n    function Task(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            items: props.items ? props.items.concat() : []\n        };\n        _this.handleLoaded = _this.handleLoaded.bind(_this);\n        _this.tick = _this.tick.bind(_this);\n        return _this;\n    }\n    Task.prototype.componentDidMount = function () {\n        this.tick(!!this.props.checkApi);\n    };\n    Task.prototype.componentWillReceiveProps = function (nextProps) {\n        var props = this.props;\n        if (props.items !== nextProps.items) {\n            this.setState({\n                items: nextProps.items ? nextProps.items.concat() : []\n            });\n        }\n    };\n    Task.prototype.componentDidUpdate = function (prevProps) {\n        var props = this.props;\n        if (api_1.isApiOutdated(prevProps.checkApi, props.checkApi, prevProps.data, props.data)) {\n            this.tick(true);\n        }\n    };\n    Task.prototype.componentWillUnmount = function () {\n        clearTimeout(this.timer);\n    };\n    Task.prototype.reload = function () {\n        this.tick(true);\n    };\n    Task.prototype.tick = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var _a = this.props, loadingStatusCode = _a.loadingStatusCode, data = _a.data, interval = _a.interval, checkApi = _a.checkApi, env = _a.env;\n        var items = this.state.items;\n        clearTimeout(this.timer);\n        // 如果每个 task 都完成了, 则不需要取查看状态.\n        if (!force && !items.some(function (item) { return item.status === loadingStatusCode; })) {\n            return;\n        }\n        if (interval && !api_1.isEffectiveApi(checkApi)) {\n            return env.alert('checkApi 没有设置, 不能及时获取任务状态');\n        }\n        api_1.isEffectiveApi(checkApi, data) &&\n            env &&\n            env\n                .fetcher(checkApi, data)\n                .then(this.handleLoaded)\n                .catch(function (e) { return _this.setState({ error: e }); });\n    };\n    Task.prototype.handleLoaded = function (ret) {\n        if (!Array.isArray(ret.data)) {\n            return this.props.env.alert('返回格式不正确, 期望 response.data 为数组, 包含每个 task 的状态信息');\n        }\n        this.setState({\n            items: ret.data\n        });\n        var interval = this.props.interval;\n        clearTimeout(this.timer);\n        this.timer = setTimeout(this.tick, interval);\n    };\n    Task.prototype.submitTask = function (item, index, retry) {\n        var _this = this;\n        if (retry === void 0) { retry = false; }\n        var _a = this.props, submitApi = _a.submitApi, reSubmitApi = _a.reSubmitApi, loadingStatusCode = _a.loadingStatusCode, errorStatusCode = _a.errorStatusCode, data = _a.data, env = _a.env;\n        if (!retry && !api_1.isEffectiveApi(submitApi)) {\n            return env.alert('submitApi 没有配置');\n        }\n        else if (retry && !api_1.isEffectiveApi(reSubmitApi)) {\n            return env.alert('reSubmitApi 没有配置');\n        }\n        this.setState(immutability_helper_1.default(this.state, {\n            items: {\n                $splice: [\n                    [\n                        index,\n                        1,\n                        tslib_1.__assign(tslib_1.__assign({}, item), { status: loadingStatusCode })\n                    ]\n                ]\n            }\n        }));\n        var api = retry ? reSubmitApi : submitApi;\n        api_1.isEffectiveApi(api, data) &&\n            env &&\n            env\n                .fetcher(api, helper_1.createObject(data, item))\n                .then(function (ret) {\n                if (ret && ret.data) {\n                    if (Array.isArray(ret.data)) {\n                        _this.handleLoaded(ret);\n                    }\n                    else {\n                        var replace = api && api.replaceData;\n                        var items = _this.state.items.map(function (item) {\n                            return item.key === ret.data.key\n                                ? tslib_1.__assign(tslib_1.__assign({}, (api.replaceData ? {} : item)), ret.data) : item;\n                        });\n                        _this.handleLoaded(tslib_1.__assign(tslib_1.__assign({}, ret), { data: items }));\n                    }\n                    return;\n                }\n                clearTimeout(_this.timer);\n                _this.timer = setTimeout(_this.tick, 4);\n            })\n                .catch(function (e) {\n                return _this.setState(immutability_helper_1.default(_this.state, {\n                    items: {\n                        $splice: [\n                            [\n                                index,\n                                1,\n                                tslib_1.__assign(tslib_1.__assign({}, item), { status: errorStatusCode, remark: e.message || e })\n                            ]\n                        ]\n                    }\n                }));\n            });\n    };\n    Task.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, className = _a.className, tableClassName = _a.tableClassName, taskNameLabel = _a.taskNameLabel, operationLabel = _a.operationLabel, statusLabel = _a.statusLabel, remarkLabel = _a.remarkLabel, btnText = _a.btnText, retryBtnText = _a.retryBtnText, btnClassName = _a.btnClassName, retryBtnClassName = _a.retryBtnClassName, statusLabelMap = _a.statusLabelMap, statusTextMap = _a.statusTextMap, readyStatusCode = _a.readyStatusCode, loadingStatusCode = _a.loadingStatusCode, canRetryStatusCode = _a.canRetryStatusCode, render = _a.render;\n        var items = this.state.items;\n        var error = this.state.error;\n        return (react_1.default.createElement(\"div\", { className: className },\n            react_1.default.createElement(\"table\", { className: tableClassName },\n                react_1.default.createElement(\"thead\", null,\n                    react_1.default.createElement(\"tr\", null,\n                        react_1.default.createElement(\"th\", null, taskNameLabel),\n                        react_1.default.createElement(\"th\", null, operationLabel),\n                        react_1.default.createElement(\"th\", null, statusLabel),\n                        react_1.default.createElement(\"th\", null, remarkLabel))),\n                react_1.default.createElement(\"tbody\", null, error ? (react_1.default.createElement(\"tr\", null,\n                    react_1.default.createElement(\"td\", { colSpan: 4 },\n                        react_1.default.createElement(\"div\", { className: \"text-danger\" }, error)))) : (items.map(function (item, key) { return (react_1.default.createElement(\"tr\", { key: key },\n                    react_1.default.createElement(\"td\", null, item.label),\n                    react_1.default.createElement(\"td\", null, item.status == loadingStatusCode ? (react_1.default.createElement(Spinner_1.default, { show: true, icon: \"reload\", spinnerClassName: classnames_1.default('Task-spinner') })) : item.status == canRetryStatusCode ? (react_1.default.createElement(\"a\", { onClick: function () { return _this.submitTask(item, key, true); }, className: classnames_1.default('btn', retryBtnClassName || btnClassName) }, retryBtnText || btnText)) : (react_1.default.createElement(\"a\", { onClick: function () { return _this.submitTask(item, key); }, className: classnames_1.default('btn', btnClassName, {\n                            disabled: item.status !== readyStatusCode\n                        }) }, btnText))),\n                    react_1.default.createElement(\"td\", null,\n                        react_1.default.createElement(\"span\", { className: classnames_1.default('label', statusLabelMap && statusLabelMap[item.status || 0]) }, statusTextMap && statusTextMap[item.status || 0])),\n                    react_1.default.createElement(\"td\", null, item.remark ? render(key + \"/remark\", item.remark) : null))); }))))));\n    };\n    Task.defaultProps = {\n        className: 'b-a bg-white table-responsive',\n        tableClassName: 'table table-striped m-b-none',\n        taskNameLabel: '任务名称',\n        operationLabel: '操作',\n        statusLabel: '状态',\n        remarkLabel: '备注说明',\n        btnText: '上线',\n        retryBtnText: '重试',\n        btnClassName: 'btn-sm btn-default',\n        retryBtnClassName: 'btn-sm btn-danger',\n        statusLabelMap: [\n            'label-warning',\n            'label-info',\n            'label-info',\n            'label-danger',\n            'label-success',\n            'label-danger'\n        ],\n        statusTextMap: ['未开始', '就绪', '进行中', '出错', '已完成', '出错'],\n        initialStatusCode: 0,\n        readyStatusCode: 1,\n        loadingStatusCode: 2,\n        errorStatusCode: 3,\n        finishStatusCode: 4,\n        canRetryStatusCode: 5,\n        interval: 3000\n    };\n    return Task;\n}(react_1.default.Component));\nexports.default = Task;\nvar TaskRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(TaskRenderer, _super);\n    function TaskRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TaskRenderer.prototype.componentWillMount = function () {\n        // super.componentWillMount();\n        var scoped = this.context;\n        scoped.registerComponent(this);\n    };\n    TaskRenderer.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        var scoped = this.context;\n        scoped.unRegisterComponent(this);\n    };\n    TaskRenderer.contextType = Scoped_1.ScopedContext;\n    TaskRenderer = tslib_1.__decorate([\n        factory_1.Renderer({\n            test: /(^|\\/)tasks$/,\n            name: 'tasks'\n        })\n    ], TaskRenderer);\n    return TaskRenderer;\n}(Task));\nexports.TaskRenderer = TaskRenderer;\n\n"},"lineCount":217}},"error":null,"hash":"8d6c3b24d3d19fde11d502d0a832e4c8","cacheData":{"env":{}}}